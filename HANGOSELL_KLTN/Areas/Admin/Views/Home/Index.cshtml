@using HANGOSELL_KLTN.Configuration
@inject SharedViewLocalizer _localizer

@{
    ViewData["Title"] = "Trang chủ Admin";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="page-wrapper">
    <div class="content container-fluid">
        <div class="page-header">
            <div class="row">
                <div class="col-sm-12">
                    <div class="page-sub-header">
                        <h3 class="page-title">@_localizer.GetLocalizedString("Welcome"), @ViewBag.UserName !!</h3>
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">@_localizer.GetLocalizedString("Home")</a></li>
                            <li class="breadcrumb-item active">@_localizer.GetLocalizedString("Dashboard")</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-xl-3 col-sm-6 col-12 d-flex">
                <div class="card bg-comman w-100">
                    <div class="card-body">
                        <div class="db-widgets d-flex justify-content-between align-items-center">
                            <div class="db-info">
                                <h6>@_localizer.GetLocalizedString("Customer")</h6>
                                <h3>@ViewData["tongcustomer"]</h3>
                            </div>
                            <div class="db-icon">
                                <img src="@Url.Content("~/Client/img/icons/dash-icon-01.svg")" alt="Dashboard Icon">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-sm-6 col-12 d-flex">
                <div class="card bg-comman w-100">
                    <div class="card-body">
                        <div class="db-widgets d-flex justify-content-between align-items-center">
                            <div class="db-info">
                                <h6>@_localizer.GetLocalizedString("Order")</h6>
                                <h3>@ViewData["tongorder"]</h3>
                            </div>
                            <div class="db-icon">
                                <img src="@Url.Content("~/Client/img/icons/dash-icon-02.svg")" alt="Dashboard Icon">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-sm-6 col-12 d-flex">
                <div class="card bg-comman w-100">
                    <div class="card-body">
                        <div class="db-widgets d-flex justify-content-between align-items-center">
                            <div class="db-info">
                                <h6>@_localizer.GetLocalizedString("Product")</h6>
                                <h3>@ViewData["tongproduct"]</h3>
                            </div>
                            <div class="db-icon">
                                <img src="@Url.Content("~/Client/img/icons/dash-icon-03.svg")" alt="Dashboard Icon">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-sm-6 col-12 d-flex">
                <div class="card bg-comman w-100">
                    <div class="card-body">
                        <div class="db-widgets d-flex justify-content-between align-items-center">
                            <div class="db-info">
                                <h6>Doanh Thu</h6>
                                <h3>@ViewData["tongdoanhthu"]</h3>
                            </div>
                            <div class="db-icon">
                                <img src="@Url.Content("~/Client/img/icons/dash-icon-04.svg")" alt="Dashboard Icon">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12 col-lg-6">
                <div class="card card-chart">
                    <div class="card-header">
                        <div class="row align-items-center">
                            <div class="col-6">
                                <h5 class="card-title">@_localizer.GetLocalizedString("Overview")</h5>
                            </div>
                            <div class="col-6">
                                <ul class="chart-list-out">
                                    <li class="star-menus">
                                        <a href="javascript:;">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <canvas id="myLineChart" width="300" height="200"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-md-12 col-lg-6">
                <div class="card card-chart">
                    <div class="card-header">
                        <div class="row align-items-center">
                            <div class="col-6">
                                <h5 class="card-title">@_localizer.GetLocalizedString("Products sold")</h5>
                            </div>
                            <div class="col-6">
                                <ul class="chart-list-out">
                                    <li class="star-menus">
                                        <a href="javascript:;">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <canvas id="myPieChart" width="380" height="380"></canvas>
                    </div>
                </div>
            </div>
        </div>
    
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    function generateRandomColors(numColors) {
        const colors = [];
        for (let i = 0; i < numColors; i++) {
            const color = `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 0.2)`;
            colors.push(color);
        }
        return colors;
    }

    function generateRandomBorderColors(numColors) {
        const colors = [];
        for (let i = 0; i < numColors; i++) {
            const color = `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 1)`;
            colors.push(color);
        }
        return colors;
    }

    document.addEventListener("DOMContentLoaded", function () {
        // Tạo request AJAX $ể lấy dữ liệu từ server
        fetch('/admin/home/tongphantram')  // Thay URL này bằng $úng route API
            .then(response => response.json())
            .then(data => {
                // Xử lý dữ liệu nhận $ược từ API
                const labels = data.map(item => item.product.title); // Tên sản phẩm
                const doanhthu = data.map(item => item.tongdoanhthu); // Tổng doanh thu của từng sản phẩm
                const backgroundColors = generateRandomColors(labels.length);
                const borderColors = generateRandomBorderColors(labels.length);
                // Tạo biểu $ồ tròn với Chart.js
                const ctx = document.getElementById('myPieChart').getContext('2d');
                const myPieChart = new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels: labels,  // Tên sản phẩm
                        datasets: [{
                            label: 'Tổng doanh thu (%)',
                            data: doanhthu, // Dữ liệu tổng doanh thu
                            backgroundColor: backgroundColors, // Màu nền ngẫu nhiên
                            borderColor: borderColors,         // Màu viền ngẫu nhiên
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: true,

                        plugins: {
                            legend: {
                                position: 'top',
                            },
                            tooltip: {
                                callbacks: {
                                    label: function (context) {
                                        let label = context.label || '';
                                        if (label) {
                                            label += ': ';
                                        }
                                        if (context.parsed !== null) {
                                            label += context.parsed + '%';  // Hiển thị phần trăm
                                        }
                                        return label;
                                    }
                                }
                            }
                        }
                    }
                });
            })
            .catch(error => {
                console.error('Lỗi khi lấy dữ liệu:', error);
            });
    });
   

</script>
<script>
    $(document).ready(function () {
        $.ajax({
            url: '/admin/home/Doanhthutheothang', // $ường dẫn $ến controller
            method: 'GET',
            success: function (data) {
                // Khởi tạo mảng doanh thu theo tháng
                var months = [
                    "Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6",
                    "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12"
                ];
                var revenues = new Array(12).fill(0); // Mảng doanh thu

                // Duyệt qua dữ liệu từ server và gán doanh thu vào mảng
                data.forEach(function (item) {
                    var month = item.thang - 1; // Lấy tháng (giá trị từ 0 - 11)
                    revenues[month] = item.tongdoanhthu; // Gán doanh thu cho tháng
                });

                // Tạo biểu $ồ $ường
                const ctx = document.getElementById('myLineChart').getContext('2d');
                const myLineChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: months, // Nhãn tháng
                        datasets: [{
                            label: 'Tổng doanh thu',
                            data: revenues, // Dữ liệu doanh thu
                            borderColor: generateRandomColor(), // Màu ngẫu nhiên cho $ường
                            fill: false,
                            borderWidth: 2
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: 'Tổng doanh thu (VND)'
                                }
                            },
                            x: {
                                title: {
                                    display: true,
                                    text: 'Tháng'
                                }
                            }
                        },
                        plugins: {
                            legend: {
                                display: true
                            }
                        }
                    }
                });
            },
            error: function (error) {
                console.error('Lỗi khi lấy dữ liệu doanh thu:', error);
                alert("Lỗi: " + error.responseText);
            }
        });
    });

    // Hàm tạo màu ngẫu nhiên
    function generateRandomColor() {
        const letters = '0123456789ABCDEF';
        let color = '#';
        for (let i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return color;
    }
</script>
<style>
        /* CSS $ể $iều chỉnh kích thước canvas */
        #myPieChart {
            max-width: 400px;  /* $ặt chiều rộng tối $a cho biểu $ồ */
            max-height: 400px; /* $ặt chiều cao tối $a cho biểu $ồ */
            margin: 0 auto;    /* Căn giữa biểu $ồ */
        }
    </style>


@section Scripts {
    <!-- Optional: JavaScript libraries for various components like ApexCharts, etc. -->
@*       <script src="~/Client/plugins/apexcharts/apexcharts.min.js"></script>
      <script src="~/Client/js/dashboard-charts.js"></script>
      <script src="~/Client/js/script.js"></script> *@

}


